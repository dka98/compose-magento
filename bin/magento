#!/usr/bin/env python3

import os
import sys
import subprocess
import re
from environment import Environment

currentpath = os.getcwd()
composepath = os.path.abspath(os.path.dirname(sys.argv[0]) + '/../')

env = Environment(composepath + '/.env')

if '2' != env.get('MAGENTOVERSION'):
    print('magento command is only usable for Magento 2')
    exit()

cmd = [
    os.path.dirname(sys.argv[0]) + '/run',
    'ps', '--services', '--filter', 'status=running'
]

p = subprocess.Popen(cmd, stdout=subprocess.PIPE)
try:
    p.wait()
except KeyboardInterrupt:
    try:
        p.terminate()
    except OSError:
        pass
    p.wait()
out, err = p.communicate()
out = out.decode('utf-8')
runningContainers = out.splitlines()

dockerrun = ['docker', 'run', '--rm']
if sys.stdin.isatty() and sys.stdout.isatty():
    dockerrun += ['-it']

cmd = dockerrun

if 'application' in runningContainers:
    containercmd = [
        os.path.dirname(sys.argv[0]) + '/run',
        'ps', '-q', 'application'
    ]

    p = subprocess.Popen(containercmd, stdout=subprocess.PIPE)
    try:
        p.wait()
    except KeyboardInterrupt:
        try:
            p.terminate()
        except OSError:
            pass
        p.wait()
    out, err = p.communicate()
    applicationcontainer = out.decode('utf-8').strip()
    cmd += [
        '--pid=container:' + applicationcontainer,
        '--net=container:' + applicationcontainer
    ]

cmd += [
    '-v', os.getenv("HOME") + "/.ssh:/var/www/.ssh",
    '-v', os.getenv("HOME") + "/.composer:/var/www/.composer",
    '-v', currentpath + ":/phpapp",
    '-e', "DEVELOPMENT=" + env.get('DEVELOPMENT'),
    '-e', "C_UID=" + env.get('C_UID'),
    '-e', "C_GID=" + env.get('C_GID'),
    'dockerwest/php-magento2:' + env.get('PHPVERSION'),
    'php', 'bin/magento'
] + sys.argv[1:]

os.execvp(cmd[0], cmd)
